{"version":3,"sources":["components/Filter/filter.module.css","components/Section/section.module.css","components/ContactList/contactList.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/contactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","state","nameInputId","numberInputId","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","className","C","form","this","htmlFor","input","onChange","type","pattern","title","required","button","Component","connect","contacts","items","dispatch","contactsAction","getVisibleContacts","filter","normalizedFilter","toLowerCase","contact","includes","onDeleteList","map","onClick","target","F","label","Section","children","S","sectionContainer","App","formSubmitHandler","createReducer","actions","_","action","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,MAAQ,yB,mBCA/ED,EAAOC,QAAU,CAAC,OAAS,8B,uLCmCZ,GAAEC,WAhCEC,YAAa,gBAAgB,YAAuB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACvD,MAAO,CACLC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cA2BuBK,cAvBPP,YAAa,mBAuBSQ,aArBvBR,YAAa,0B,OCT5BS,E,4MACJC,MAAQ,CACNT,KAAM,GACNC,OAAQ,I,EAGVS,YAAcN,IAAQC,W,EACtBM,cAAgBP,IAAQC,W,EAExBO,aAAe,SAACC,GACd,EAAKC,SAAL,eAAiBD,EAAEE,cAAcf,KAAOa,EAAEE,cAAcC,S,EAG1DC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OAEzB,EAAKY,S,EAGPA,MAAQ,WACN,EAAKP,SAAS,CAAEd,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMqB,UAAWC,IAAEC,KAAMJ,SAAUK,KAAKR,aAAxC,UACE,uBAAOS,QAASD,KAAKf,YAArB,kBACA,uBACEY,UAAWC,IAAEI,MACbxB,GAAIsB,KAAKf,YACTM,MAAOS,KAAKhB,MAAMT,KAClB4B,SAAUH,KAAKb,aACfiB,KAAK,OACL7B,KAAK,OACL8B,QAAQ,yHACRC,MAAM,8cACNC,UAAQ,IAEV,uBAAON,QAASD,KAAKd,cAArB,oBACA,uBACEW,UAAWC,IAAEI,MACbxB,GAAIsB,KAAKd,cACTK,MAAOS,KAAKhB,MAAMR,OAClB2B,SAAUH,KAAKb,aACfiB,KAAK,MACL7B,KAAK,SAGLgC,UAAQ,IAEV,wBAAQV,UAAWC,IAAEU,OAAQJ,KAAK,SAAlC,gC,GAnDkBK,aAkEXC,eAPS,SAAC1B,GAAD,MAAY,CAClC2B,SAAU3B,EAAM2B,SAASC,UAGA,SAACC,GAAD,MAAe,CACxClB,SAAU,SAACpB,EAAMC,GAAP,OAAkBqC,EAASC,EAAezC,WAAWE,EAAMC,QAExDkC,CAA6C3B,G,iBCtDtDgC,EAAqB,SAACJ,EAAUK,GACpC,IAAMC,EAAmBD,EAAOE,cAEhC,OAAOP,EAASK,QAAO,SAACG,GAAD,OACrBA,EAAQ5C,KAAK2C,cAAcE,SAASH,OAYzBP,eARS,SAAC,GAAD,QAAGC,SAAYC,EAAf,EAAeA,MAAOI,EAAtB,EAAsBA,OAAtB,MAAsC,CAC5DL,SAAUI,EAAmBH,EAAOI,OAGX,SAACH,GAAD,MAAe,CACxCQ,aAAc,SAAC3C,GAAD,OAAQmC,EAASC,EAAejC,cAAcH,QAG/CgC,EA7BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUU,EAAb,EAAaA,aAAb,OAClB,6BACGV,EAASW,KAAI,gBAAG5C,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACE,+BAAOD,IACP,+BAAOC,IACP,wBAAQqB,UAAWC,IAAEU,OAAQe,QAAS,kBAAMF,EAAa3C,IAAzD,sBAHOA,W,iBCiBAgC,eARS,SAAC1B,GAAD,MAAY,CAClCgC,OAAQhC,EAAM2B,SAASK,WAGE,SAACH,GAAD,MAAe,CACxCV,SAAU,SAACf,GAAD,OAAOyB,EAASC,EAAehC,aAAaM,EAAEoC,OAAOjC,YAGlDmB,EApBA,SAAC,GAAD,IAAGM,EAAH,EAAGA,OAAQb,EAAX,EAAWA,SAAX,OACb,wBAAON,UAAW4B,IAAEC,MAApB,kCAEE,uBACE7B,UAAW4B,IAAEvB,MACbE,KAAK,OACLb,MAAOyB,EACPb,SAAUA,U,iBCFDwB,EAPC,SAAC,GAAD,IAAGrB,EAAH,EAAGA,MAAOsB,EAAV,EAAUA,SAAV,OACd,sBAAK/B,UAAWgC,IAAEC,iBAAlB,UACE,oBAAIjC,UAAWgC,IAAEvB,MAAjB,SAAyBA,IACxBsB,MCuCUG,E,4JArBb,WAME,OACE,sBAAKlC,UAAU,YAAf,UACE,cAAC,EAAD,CAASS,MAAO,YAAhB,SACE,cAAC,EAAD,CAAaX,SAAUK,KAAKgC,sBAG9B,eAAC,EAAD,CAAS1B,MAAO,WAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,c,GA9BQG,a,eCHZG,EAAQqB,YACZ,CACE,CAAEvD,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eALvB,mBAQtB0D,EAAQ7D,YAAa,SAACW,EAAD,OAAUP,EAAV,EAAUA,QAAV,4BAA4BO,GAA5B,CAAmCP,OARlC,cAStByD,EAAQrD,eAAgB,SAACG,EAAD,OAAUP,EAAV,EAAUA,QAAV,OACvBO,EAAMgC,QAAO,SAACG,GAAD,OAAaA,EAAQzC,KAAOD,QAVpB,IAcrBuC,EAASiB,YAAc,GAAD,eACzBC,EAAQpD,cAAe,SAACqD,EAAGC,GAAJ,OAAeA,EAAO3D,YAqCjC4D,cAAgB,CAAEzB,QAAOI,W,iBChDlCsB,EAAU,sBAAOC,eAAP,CAA+BC,MAYhCC,EAVDC,YAAe,CAC3BC,QAAS,CACPhC,SAAUiC,GAEZN,aACAO,UAAUC,I,YCPZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,U,kBCd1BhF,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.2b881df3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__2jeYx\",\"input\":\"filter_input__9CGQy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionContainer\":\"section_sectionContainer__85Z8g\",\"title\":\"section_title__119_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"contactList_button__1vfvV\"};","// import types from './contacts-types';\nimport shortid from \"shortid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\nconst deleteContact = createAction(\"contacts/delete\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\n// const addContact = ({ name, number })=>({\n//   type: types.ADD,\n//   payload: {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//   }\n// });\n\n// const deleteContact = listId => ({\n//   type: types.DELETE,\n//   payload: listId,\n// });\n\n// const changeFilter = value => ({\n// type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\nexport default { addContact, deleteContact, changeFilter };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport C from \"./contactForm.module.css\";\nimport shortid from \"shortid\";\nimport contactsAction from \"../../redux/contacts/contacts-actions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = (e) => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={C.form} onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>Name</label>\n        <input\n          className={C.input}\n          id={this.nameInputId}\n          value={this.state.name}\n          onChange={this.handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов.             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label htmlFor={this.numberInputId}>Number</label>\n        <input\n          className={C.input}\n          id={this.numberInputId}\n          value={this.state.number}\n          onChange={this.handleChange}\n          type=\"tel\"\n          name=\"number\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d            {1,9}\"\n          // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире,             круглые скобки и может начинаться с +\"\n          required\n        />\n        <button className={C.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(contactsAction.addContact(name, number)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport C from \"./contactList.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsAction from \"../../redux/contacts/contacts-actions\";\n\nconst ContactList = ({ contacts, onDeleteList }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <span>{name}</span>\n        <span>{number}</span>\n        <button className={C.button} onClick={() => onDeleteList(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteList: (id) => dispatch(contactsAction.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport F from \"./filter.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsAction from \"../../redux/contacts/contacts-actions\";\n\nconst Filter = ({ filter, onChange }) => (\n  <label className={F.label}>\n    Find contacts by name\n    <input\n      className={F.input}\n      type=\"text\"\n      value={filter}\n      onChange={onChange}\n    ></input>\n  </label>\n);\n\nconst mapStateToProps = (state) => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsAction.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport S from \"./section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <div className={S.sectionContainer}>\n    <h2 className={S.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport Section from \"./components/Section\";\n\n// import contacts from './data/contacts.json'\n\nclass App extends Component {\n  //  componentDidMount() {\n  //   console.log('Монтирование')\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contacts);\n  //   if (parsedContacts) {\n  //     this.setState({contacts:parsedContacts})\n  //   }\n  // };\n\n  // componentDidUpdate(prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  //   }\n  // }\n\n  render() {\n    // const {filter } = this.state;\n    // const normalizedFilter = this.state.filter.toLowerCase();\n    // const visibleContacts = this.state.contacts.filter(contact =>\n    //   contact.name.toLowerCase().includes(normalizedFilter));\n\n    return (\n      <div className=\"container\">\n        <Section title={\"Phonebook\"}>\n          <ContactForm onSubmit={this.formSubmitHandler} />\n        </Section>\n\n        <Section title={\"Contacts\"}>\n          <Filter />\n          <ContactList />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-actions\";\n// import types from './contacts-types';\n\nconst items = createReducer(\n  [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],\n  {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n      state.filter((contact) => contact.id !== payload),\n  }\n);\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n//      default:\n//       return state;\n//   }\n// };\n\n// const items = (state = [], { type, payload }) => {\n//    switch (type) {\n//     case types.ADD:\n//       if (\n//         state.some(\n//           ({ name }) => name.toLowerCase() === payload.name.toLowerCase(),\n//         )\n//       ) {\n//         alert(`${payload.name} is already in contacts`);\n//         return [...state];\n//       }\n//       if (state.some(({ number }) => number === payload.number)) {\n//         alert(`${payload.number} is already in contacts`);\n//         return [...state];\n//       }\n\n//       return [payload, ...state];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({ items, filter });\n","// import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport logger from \"redux-logger\";\n\n// const rootReduser = combineReducers({\n//   contacts: contactsReducer,\n// });\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const store = createStore(rootReduser, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__3ZLQ5\",\"input\":\"contactForm_input__1dDwI\",\"span\":\"contactForm_span__1-LHn\",\"button\":\"contactForm_button__3J0-A\"};"],"sourceRoot":""}